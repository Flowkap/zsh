# Requirements:
# oh-my-zsh
# powerline shell
# helm3 + kubectl

###############################################################################
# functions
###############################################################################

function powerline_precmd() {
    PS1="$(powerline-shell --shell zsh $?)"
}

function install_powerline_precmd() {
    for s in "${precmd_functions[@]}"; do
        if [ "$s" = "powerline_precmd" ]; then
        return
        fi
    done
    precmd_functions+=(powerline_precmd)
}

function all_images() {
    kubectl get pods -o jsonpath="{..image}" |tr -s '[[:space:]]' '\n' |sort |uniq -c
}

function git_recursive() {
    # Update all git directories below current directory or specified directory
    # Skips directories that contain a file called .ignore
    #
    # Originally: https://stackoverflow.com/questions/11981716/how-to-quickly-find-all-git-repos-under-a-directory

    HIGHLIGHT="\e[01;34m"
    NORMAL='\e[00m'

    OPERATION=status
    if [ "$1" != "" ]; then OPERATION=$@ > /dev/null; fi

    function update {
    local d="$1"
    if [ -d "$d" ]; then
        if [ -e "$d/.ignore" ]; then
        echo -e "\n${HIGHLIGHT}Ignoring $d${NORMAL}"
        else
        cd $d > /dev/null
        if [ -d ".git" ]; then
            echo -e "\n${HIGHLIGHT}Updating `pwd`$NORMAL"
            # echo $operation
            git $OPERATION
        else
            scan *
        fi
        cd .. > /dev/null
        fi
    fi
    }

    function scan () {
    for x in $*; do
        update "$x" operation=$operation
    done
    }

    echo -e "${HIGHLIGHT}Scanning ${PWD}${NORMAL}"
    scan *
}

function git_open() {
    if [ -d ".git" ]; then
        GIT_URL=$(cat .git/config | grep url)
        PROJECT_ID="$(cut -d'/' -f4 <<<"$GIT_URL")"
        REPO="$(cut -d'/' -f5 <<<"$GIT_URL")"
        REPO=${REPO%".git"}
        URL="https://git.swarco.com/projects/$PROJECT_ID/repos/$REPO/browse"
        bash -c "xdg-open $URL" 2> /dev/null  1> /dev/null
    else
        echo "This is not a git repo!"
        exit 1
    fi
}

function clone_all() {
    node ~/bin/cloneAll/cloneAll.js | xargs -L1 git clone
}

function kc_print_resources() {
    echo -e "Iterating...\n"

    nodes=$(kubectl get node --no-headers -o custom-columns=NAME:.metadata.name)

    for node in $nodes; do
    echo "Node: $node"
    kubectl describe node "$node" | sed '1,/Non-terminated Pods/d'
    echo
    done
}

###############################################################################
# custom extensions
###############################################################################

# Personal bin dir
PATH="/home/flowkap/.local/bin:$PATH"

# Powerline shell
if [ "$TERM" != "linux" ]; then
    install_powerline_precmd
fi

#History bash_history 10Million
HISTFILE=~/.zsh_history
HISTSIZE=10000000
SAVEHIST=10000000

# Standard stuff
PROMPT_COMMAND='echo -en "\033]0; $("pwd") \a"'

alias ll='ls -ls'
alias la='ls -la'
alias uuid='cat /proc/sys/kernel/random/uuid'

# make search up and down work, so partially type and hit up/down to find relevant stuff
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down

# Git stuff
alias git='hub'
alias gitr='git_recursive'
alias push='git push'
alias pull='git pull'
git config --global alias.open "!zsh -c 'source ~/.flowkap && (git_open &)'"

# FUN
alias csn='echo H4sIAG9GYVsAA51Yba7sIAj9P6swMRJiDGzB/a/qAmprp0o7l+S9O231HMAjfnw+n0/4txEDQAKUX/KE5X9QBWq3GEJqvyCXnH+Ho1RnC6GjIQXCWn9GvMKpcacQVxWx1t8gb3hmidoHZkgo6ZBs/uTqGlW9bOEzSYpTDKUyAr9Hvod/AUfo8JrpLA/4GtoFNvAuChQnsvkBL8EpAHjI3VpsJeX+8x16KZGqjNILgu5/b0rv8HPNMvop1McQ4Pib3utQswoIRSN/l6Ck0smio1eyiXj4Fh3oUmMMFXMjMKL4LkXEU2oX2TiMITDcgnzBMBHMo3wPJ6ZUSZR/5XhRA7OTmW8OrQWl4pXjkaJ86/PynLIMVBRoS5rUbS3eBZGYSumTPj1x0CoKjCmeky/hMr1AIwVPHGk7zdTlYkMic/FoLk+IHAqryuVffCAovMJOgWowbQm/KVleGN7sWg1Q1YEn0S6ngQyAJOeiWV0BbP2ilkhjlih7ifVZyqpaaF4UIVi6Tdck7rCwxFwUH4qIIGuD3v+BZRWKfjgSQ2hZSg00ckBRBBJw+zwGz6fBBYvh5fjlzoCl/pzb80iGS7PKGAzgcjTjadTH66bro5dfGPc0asTJHLnOlFITK1eWdJYTweOhE/0igC9LMD/FmZZe8eSFnuN3o1j1f84T9BzcMagu0bm+bQPK9qIkqcQBOWphmZhOT13BrWrMFxEPUBJvuujCmckpEx7RStdwbVKXHYfRO6K43DpcFHYbsauNlAgQefVtxVMvZVJNaz2dTzDpZYqokjOPNkS2lEw2pi0mKIY+XswZCfsVekdzCeBCGCFRmV5cFkXYCtzf3H1xnQTTgnoVU9oxuTxqGNaRbRE22XuzIXaZ7s3Xax7uc3fxoazZaNlzyfQiouHp4CIav3b5WDFBrsXbLd+s7bJla1ho7+VGET9sPk9rlXX3cafyn6mym7rqlb1faKAvTKuCPGxf9n7ZvR++peVOU83ZaD/Bh1M0UiKwL0y79DkHk4fJq6vhsWrTYy+HaD37DuvYGlY81tl9tfQWQZdnrLpYxSM6Q9o75q3rHhOOJhq7BFae8uDuIDzpWRCyJTYmxW9dtrp72B47TJY52bYi1wx2iCwPPfzTixsUVQkaEZj0Aksqnq9V//Tt9YQWRdTwOGVW2flTHe83p/ZaTp/QRpi1wqQ2U1Rz7TAZ+um0nflq7xcA7GUCsMKkj2gjHpfXU/WcirWPQNK/7aqs1bbG1b7EmSvYhDZxot7A2LqVzUm6c51qOnpr42iERkeXuCDsuWqLe2T2powRyyIsOwmFg4qZaeK4U/Xqa2EtLwPUAb1iaP62PMfO1+M+MmjGo1VeRYU9g3bQvl+rR70o1ePToLYfYAKpPURgjgddbeJBe6G5sqvE206vttuQ0F3h7hW3/dBXg9bBPmC/Hs8d5L6F7HElCzWFMdG5jgp6NuiPJrIBbO/SrqTZteJAOBufjtIphTEOTx7XcSetwWnfMUQdWCGjHY8mj1sYYdJANjITaTGhy2B+/gAOXKA2KRkAAA== | base64 -d | gunzip && sleep 5s && clear'
alias sw='telnet towel.blinkenlights.nl'
alias shruggie="echo -n '¯\_(ツ)_/¯' | xclip -selection clipboard; xclip -o -selection clipboard; echo -e '\n'"

# Tools
alias pgadmin='docker run --restart=always --network host -e PGADMIN_DEFAULT_EMAIL=florian.kappes@swarco.de -e PGADMIN_DEFAULT_PASSWORD=YahGhim8 -e PGADMIN_LISTEN_PORT=15432 -v /home/flowkap/pgadmin4/:/var/lib/pgadmin --name pgadmin4 -d dpage/pgadmin4'

# special
export ANSIBLE_NOCOWS=1
alias vpn='sudo bash -c "echo 2 > /proc/sys/net/ipv4/tcp_mtu_probing"; sudo barracudavpn'
alias vpnConnect='sudo bash -c "echo 2 > /proc/sys/net/ipv4/tcp_mtu_probing"; sudo barracudavpn --start -l florian.kappes'
alias ho='vpnConnect; sudo apt update; sudo apt upgrade -y; cip'
alias cip='cd ~/git/ && clone_all ; gitr sync'


###############################################################################
# Kubernetes
###############################################################################
export KUBE_EDITOR="nano"

# Ansible vault
# helper to edit an vault (like inventory host_vars files)
alias vault="EDITOR='code --wait' ansible-vault edit --vault-password-file=~/.vault-pass"

# kc because reason
source <(kubectl completion zsh) programm &> /dev/null
source <(kubectl completion zsh | sed 's/kubectl/kc/g') &> /dev/null
alias kc='kubectl'

# Kubebox
# Log and analysis tool
alias kubebox='docker run -it --rm -v ~/.kube/:/home/node/.kube/:ro astefanutti/kubebox'
alias kb="kubebox"

# Kube Operational view
# Multi cluster UI
alias kube-ops-view='docker run -it --net=host -v ~/.kube:/kube hjacobs/kube-ops-view --kubeconfig-path=/kube/config'
alias ko="kube-ops-view"

# Kubetail
# Can fetch logs of multiple pods at once (like kt api-gateway)
alias kubetail="kubetail.sh"
alias kt="kubetail"

# Port forward using kubectl
# Used to connect to any cluster internal pod or service if not exposed
# Needed for staging + prod!
alias port-forward="port-forward.sh"
alias pf="port-forward"

# Switches cluster context
# Basically copies named file as default .kube/config
alias switch-cluster="switch-cluster.sh"
alias sc="switch-cluster"

# Changes namespace context
# For both:
#   kubectl
#   helm
alias switch-namespace="switch-namespace.sh"
alias sn="switch-namespace"

# Prints ressource consumption statistics for whole cluster
alias print-resources="kc_print_resources"
alias restart-core="restart-core.sh"

# Get all images running in current namespace
alias kci="all_images"
